version: '3.4'

services:

  # FRONTEND
  frontend:
    build:
      context: ./
      dockerfile: ./burgercraft-app_frontend/Dockerfile
    image: burgercraft_app.frontend
    container_name: burgercraft_app.frontend
    ports:
      - ${APP_PORT}:80
    networks:
      - app_network

  # BACKEND
  backend:
    build:
      context: ./
      dockerfile: ./burgercraft-app_backend/Dockerfile
    image: burgercraft_app.backend
    container_name: burgercraft_app.backend
    ports:
      - ${API_PORT}:3000
    networks:
      - app_network
    depends_on:
      - postgres

  # DATABASE
  postgres:
    build:
      context: ./postgres
      dockerfile: postgres.Dockerfile
    image: burgercraft_app.postgres
    container_name: burgercraft_app.postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - app_network

  # WEB INTERFACE DATABASE
  pgadmin:
    build:
      context: ./postgres
      dockerfile: pgadmin.Dockerfile
    image: burgercraft_app.pgadmin
    container_name: burgercraft_app.pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:80
    networks:
      - app_network
    depends_on:
      - postgres

  # WEB SERVER
  nginx:
    build:
      context: ./nginx
    image: burgercraft_app.nginx
    container_name: burgercraft_app.nginx
    ports:
      - ${NGINX_PORT}:80
    networks:
      - app_network
    depends_on:
      - frontend
      - backend
      - postgres
      - pgadmin

networks:
  app_network:
    driver: bridge